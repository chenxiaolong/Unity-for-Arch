# Maintainer: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
# Original Maintainer: Andrea Scarpino <andrea@archlinux.org>
# Contributor: Pierre Schmitz <pierre@archlinux.de>

# Cannot build if qt-ubuntu is installed
if $(pacman -Q qtwebkit &>/dev/null) && [ "x${IGNORE_NO_QTWEBKIT}" == 'x' ] && [ "x${UPDATE_SCRIPT}" == 'x' ]; then
  echo ""
  error "qtwebkit must be temporarily removed before building."
  msg "Please run:"
  echo ""
  echo "  pacman -Rdd qtwebkit"
  echo ""
  msg "and reinstalled after the build."
  echo ""
  echo "(If for some reason, you need to override this message, run:)"
  echo ""
  echo "  IGNORE_NO_QTWEBKIT=yes makepkg"
  exit 1
fi

# AUR fix
pkgname=qt-ubuntu
pkgdesc='A cross-platform application and UI framework'

pkgbase=qt-ubuntu
true && pkgname=('qt-ubuntu' 'qt-private-headers-ubuntu')
_ubuntu_rel=0ubuntu4
pkgver=4.8.1.${_ubuntu_rel}
pkgrel=100
arch=('i686' 'x86_64')
url='http://qt-project.org/'
license=('GPL3' 'LGPL')
makedepends=('libtiff' 'libpng' 'libmng' 'sqlite3' 'ca-certificates' 'dbus' 'libgl' 'libsm' 'libxrandr' 'libxv' 'libxi' 'alsa-lib' 'xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'mesa' 'postgresql-libs' 'mysql' 'unixodbc' 'cups' 'gtk2' 'freetds' 'libfbclient')
options=('!libtool')
_pkgfqn="${pkgbase%-*}-everywhere-opensource-src-${pkgver%.*}"
source=("http://get.qt.nokia.com/qt/source/${_pkgfqn}.tar.gz"
        "https://launchpad.net/ubuntu/+archive/primary/+files/qt4-x11_${pkgver%.*}-${_ubuntu_rel}.debian.tar.gz"
        'gcc47.patch')
sha512sums=('a48825a3d42c93c6d9d769d9f79b297d92b5deb9003c89c2d1f1b364b496fc6e7d307e0eb6b798ae49d7bf1928caeda6741025242499296550293518004c3d90'
            'a67f090af9212c843e0b2697f2171681a8efb6c3eca79f939eb2d007a14a681ecaabf28fc690be5dd36ff1eaef970326b57057dedd0753600c3c315ba542fe60'
            '992b7fbaf234448f81d405a16885c14004a9caafa19963771db08b7b971fd0981078b151b614dbf5fd849e5303d5c1443e41ece7df49d0384c54dd88b1c46535')

build() {
  cd "${srcdir}/${_pkgfqn}"

  # Apply Arch Linux patches
    # Fix build with GCC 4.7
      patch -Np1 -i "${srcdir}/gcc47.patch"

  # Apply Ubuntu patches
    # Disable patches (longest command you've ever seen? :D) (can't use
    # punctuation for comments or editors will completely screw up the
    # syntax highlighting)
      sed -i \
      `# Patch for adding '-qt4' to the end of the filenames of binaries` \
        -e '/01_debian_append_qt4_suffix.diff/d'                          \
      `# Multiarch patch for Debian/Ubuntu`                               \
        -e '/qt-multiarch-plugin-path-compat.diff/d'                      \
      `# Debian architecture detection {fails with:`                      \
      `# "Qt has not been ported to this architecture"}`                  \
        -e '/07_trust_dpkg-arch_over_uname-m.diff/d'                      \
      `# ARM v6 entry for previous patch`                                 \
        -e '/94_armv6_uname_entry.diff/d'                                 \
      `# Disable Qt webkit {exists in separate package}`                  \
        -e '/16_hide_std_symbols_on_qtwebkit.diff/d'                      \
        -e '/18_enable_qt3support_qtwebkit_debug_info.diff/d'             \
        -e '/30_webkit_unaligned_access.diff/d'                           \
        -e '/96_webkit_no_gc_sections.diff/d'                             \
        -e '/kubuntu_17_enable_qtwebkit_for_qtassistant.diff/d'           \
        -e '/kubuntu_01_fix_build_glib_231.diff/d'                        \
        -e '/11_build_translations.diff/d'                                \
      `# Disable enabling qvfb {does that make sense? :D} - it requires`  \
      `# the built-in Qt webkit`                                          \
        -e '/20_install_qvfb.diff/d'                                      \
        -e '/fix_qvfb_build.patch/d'                                      \
      `# Debug packages arent used in Arch Linux - remove patch to`       \
      `# default to keeping debug symbols`                                \
        -e '/12_add_nostrip_for_debug_packages.diff/d'                    \
      `# Unsupported CPU architectures`                                   \
        -e '/add_missing_method_for_QBasicAtomicPointer_on_s390.patch/d'  \
        -e '/powerpc_designer_gstabs.diff/d'                              \
        -e '/kfreebsd_monotonic_clock.diff/d'                             \
        -e '/sh.diff/d'                                                   \
        -e '/powerpcspe.diff/d'                                           \
        -e '/99_hppa_bug561203_decrease_failure_rate.diff/d'              \
        -e '/92_armel_gcc43_valist_compat.diff/d'                         \
        -e '/80_hurd_max_path.diff/d'                                     \
        -e '/71_hppa_unaligned_access_fix_458133.diff/d'                  \
        -e '/70_hppa_ldcw_fix.diff/d'                                     \
        -e '/51_kfreebsd_strnstr_build_fix.diff/d'                        \
        -e '/50_kfreebsd_Q_OS.diff/d'                                     \
        -e '/41_disable_opengl_visibility.diff/d'                         \
        -e '/40_alpha_ice.diff/d'                                         \
      `# Demos arent built on Arch Linux`                                 \
        -e '/buildable_appchooser_states_demos.patch/d'                   \
      `# This is not Debian or Ubuntu`                                    \
        -e '/08_configure_quilt_compat.diff/d'                            \
      `# Do not default to ibus`                                          \
        -e '/kubuntu_10_ibus_input_method.diff/d'                         \
      `# Tests arent built`                                               \
        -e '/10_config_tests_fixes.diff/d'                                \
      `# Not needed for rolling release distros`                          \
        -e '/23_permit_plugins_built_with_future_qt.diff/d'               \
      `# Disable overlay scrollbar (not tested)`                          \
      `# -e '/kubuntu_93_disable_overlay_scrollbars.diff/d'`              \
      \
      "${srcdir}/debian/patches/series"

  for i in $(cat "${srcdir}/debian/patches/series" | grep -v '#'); do
    patch -Np1 -i "${srcdir}/debian/patches/${i}"
  done

  # Workaround the error:
  # error: ‘struct’ tag used in naming ‘union _GMutex’
  #CFLAGS="${CFLAGS} -fpermissive"
  #CXXFLAGS="${CXXFLAGS} -fpermissive"

  # Workaround error with new glib
  #CFLAGS="${CFLAGS} -Wno-error=deprecated-declarations"
  #CXXFLAGS="${CXXFLAGS} -Wno-error=deprecated-declarations"

  # More workarounds
  #CFLAGS="${CFLAGS} -Wno-error"
  #CXXFLAGS="${CXXFLAGS} -Wno-error"

  export QT4DIR="${srcdir}/${_pkgfqn}"
  export LD_LIBRARY_PATH="${QT4DIR}/lib:${LD_LIBRARY_PATH}"

  sed -i "s|-O2|${CXXFLAGS}|" mkspecs/common/{g++,gcc}-base.conf
  sed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" mkspecs/common/gcc-base-unix.conf
  sed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS}|g" mkspecs/common/gcc-base.conf

  # From debian/rules:
  # Remove include directory. Then ./configure will take care of calling
  # syncqt and regenerating it.
  rm -rvf include

  ./configure \
    `# License` \
    -confirm-license \
    -opensource \
    `# Paths and prefixes` \
    -datadir /usr/share/qt \
    -demosdir /usr/share/doc/qt/demos \
    -docdir /usr/share/doc/qt \
    -examplesdir /usr/share/doc/qt/examples \
    -importdir /usr/lib/qt/imports \
    -plugindir /usr/lib/qt/plugins \
    -prefix /usr \
    -sysconfdir /etc/xdg \
    -translationdir /usr/share/qt/translations \
    `# Enable features` \
    -plugin-sql-mysql \
    -plugin-sql-odbc \
    -plugin-sql-psql \
    -plugin-sql-sqlite \
    `# Disable features` \
    -no-openvg \
    -no-phonon \
    -no-phonon-backend \
    -no-webkit \
    `# Configuration options` \
    -graphicssystem raster \
    -optimized-qmake \
    -reduce-relocations \
    -system-sqlite \
    `# Build options` \
    -dbus-linked \
    -no-rpath \
    -nomake demos \
    -nomake docs \
    -nomake examples \
    -openssl-linked \
    -verbose

  make ${MAKEFLAGS}
}

package_qt-ubuntu() {
  pkgdesc='A cross-platform application and UI framework'
  depends=('libtiff' 'libpng' 'libmng' 'sqlite3' 'ca-certificates' 'dbus' 'libgl' 'libsm' 'libxrandr' 'libxv' 'libxi' 'alsa-lib' 'xdg-utils' 'hicolor-icon-theme' 'desktop-file-utils' 'libxi')
  conflicts=('qt')
  provides=("qt=${pkgver}")
  optdepends=('postgresql-libs: PostgreSQL driver'
              'libmysqlclient: MySQL driver'
              'unixodbc: ODBC driver'
              'freetds: Sybase and MS SQL driver'
              'libfbclient: Firebird driver'
              'libxinerama: Xinerama support'
              'libxcursor: Xcursor support'
              'libxfixes: Xfixes support')
  install='qt.install'

  cd "${srcdir}/${_pkgfqn}"
  make INSTALL_ROOT="${pkgdir}" install

  ### Tnstall desktop files and icons ###
  install -d -m755 "${pkgdir}/usr/share/applications/"

  # Qt Designer
  sed 's/-qt4//g' < "${srcdir}/debian/desktop/designer-qt4.desktop" > "${pkgdir}/usr/share/applications/designer.desktop"
  install -p -D -m644 tools/designer/src/designer/images/designer.png "${pkgdir}/usr/share/pixmaps/designer.png"
  # Qt Assistant
  sed 's/-qt4//g' < "${srcdir}/debian/desktop/assistant-qt4.desktop" > "${pkgdir}/usr/share/applications/assistant.desktop"
  install -p -D -m644 tools/assistant/tools/assistant/images/assistant.png "${pkgdir}/usr/share/pixmaps/assistant.png"
  # Qt Linguist
  sed 's/-qt4//g' < "${srcdir}/debian/desktop/linguist-qt4.desktop" > "${pkgdir}/usr/share/applications/linguist.desktop"
  install -p -D -m644 tools/linguist/linguist/images/icons/linguist-128-32.png "${pkgdir}/usr/share/pixmaps/linguist.png"
  # Qt Config
  sed 's/-qt4//g' < "${srcdir}/debian/desktop/qtconfig-qt4.desktop" > "${pkgdir}/usr/share/applications/qtconfig.desktop"
  install -p -D -m644 src/gui/dialogs/images/qtlogo-64.png "${pkgdir}/usr/share/pixmaps/qtconfig.png"

  ### Install manpages from Debian ###
  install -d -m755 "${pkgdir}/usr/share/man/man1/"
  for i in "${srcdir}"/debian/manpages/*.1; do
    FILENAME="${i##*/}"
    FILENAME="${FILENAME/-qt4/}"
    sed -e 's/-qt4//g' -e 's/-QT4//g' < "${i}" > "${pkgdir}/usr/share/man/man1/${FILENAME}"
  done

  ### Install license files ###
  install -D -m644 LGPL_EXCEPTION.txt "${pkgdir}/usr/share/licenses/qt/LGPL_EXCEPTION.txt"

  ### Fix path in pkgconfig files ###
  find "${pkgdir}/usr/lib/pkgconfig" -type f -name '*.pc' -exec perl -pi -e "s, -L${srcdir}/?\S+,,g" {} \;

  ### Fix path in prl files ###
  find "${pkgdir}/usr/lib" -type f -name '*.prl' -exec sed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;
}

package_qt-private-headers-ubuntu(){
  pkgdesc="Qt private headers for development"
  depends=("qt-ubuntu=${pkgver}")
  conflicts=('qt-private-headers')
  provides=("qt-private-headers=${pkgver}")
  options=('!emptydirs')

  install -d -m755 "${pkgdir}"/usr/include/{QtCore,QtDeclarative,QtGui,QtScript}
  install -d -m755 "${pkgdir}"/usr/src/{corelib,declarative,gui,script}
    
  for i in QtCore QtDeclarative QtGui QtScript; do
    cp -r "${srcdir}/${_pkgfqn}/include/${i}/private/" "${pkgdir}/usr/include/${i}/"
  done

  for i in corelib declarative gui script; do
    cp -r "${srcdir}/${_pkgfqn}/src/${i}" "${pkgdir}/usr/src/"
  done
}
