# Maintainer: Xiao-Long Chen <chenxiaolong@cxl.epac.to>

pkgname=unity
_actual_ver=7.0.2
_extra_ver=+13.10.20130723.1
_ubuntu_rel=0ubuntu1
_translations=20130418
pkgver=${_actual_ver}${_extra_ver/+/.}
pkgrel=100

pkgdesc="A desktop experience designed for efficiency of space and interaction"
arch=('i686' 'x86_64')
url="https://launchpad.net/unity"
license=('GPL')
depends=('bamf' 'boost' 'compiz-ubuntu' 'clutter-gtk' 'gjs' 'gnome-desktop' 'gnome-screensaver' 'gnome-session-ubuntu' 'hud>=13.10.1daily13.06.05.1' 'ido' 'libgnomeui' 'libindicator' 'libindicator3' 'libnotify' 'libunique' 'libunity>=7.0.2daily13.06.06.1' 'libunity-misc' 'libxfixes' 'libzeitgeist' 'nux>=4.0.2' 'unity-asset-pool' 'libxi>=1.7' 'xpathselect')
makedepends=('cmake' 'doxygen' 'intltool' 'patchutils' 'pkg-config' 'python2-distribute')
checkdepends=('gtest-ubuntu' 'gmock-ubuntu')
groups=('unity')
provides=("unity-core=${_actual_ver}")
conflicts=('unity-core')

install=unity.install
source=("https://launchpad.net/ubuntu/+archive/primary/+files/unity_${_actual_ver}${_extra_ver}.orig.tar.gz"
        "https://launchpad.net/ubuntu/+archive/primary/+files/unity_${_actual_ver}${_extra_ver}-${_ubuntu_rel}.diff.gz"
        "https://dl.dropboxusercontent.com/u/486665/Translations/translations-${_translations}-unity.tar.gz"
        '0001_Remove_gtest.patch'
        '0002_ArchLinux_Branding.patch'
        '0003_Revert_r3134_Remove_Systray_Whitelist.patch'
        '0005_Disable_Werror.patch'
        '0008_Remove_Launchers.patch'
        'launcher_bfb.png'
        'unity-migrate-dconf-path.desktop'
        '10_unity.gschema.override'
        'com.canonical.Unity.Panel.Service.service')
sha512sums=('30d36d1bae7c266eafb2f4faa159ee938b0285bd3a3ba7dde67ecf724c6714eb80814763e47e7dfcfd9690c62408f6f95d0cd70d7a6d6813ce5de9d4de372541'
            'c9f2bc4adbaad47b594cabdf5c5811c76e6600dc9dad582a01ea39ba13e066105f0fd6a94c6569ba4e7484430245bc8c4ad6144b12bb62f64c827f27b635ec4a'
            '323dd3ce133593d35c39400b5aed3eab417e967e4e553b9e466126db72fd0182f5e1bc69b55aeece429a84fbf8d7908bb6dace5ff8351f448f184fe193acaf98'
            '56cf552168a57a585a178f11685ee3f9e20f9aca9efb80d9232d5081afce85e9c25c3aff6c640b69be56bbba4681afe6fa38cdcb038ac834a220946eac73a5fa'
            '6fbfa03faadb23d7908bb1b9cc61a3bdfd5ff412b9a1104103aef7d60cd146ccd51b022b5a64bc1ece116d7f754e9d5372cf8fa790fb7f150a87d84b1dc616fb'
            '22f6e6821fa1fc245c9e32ed04588a9a79f627d76687a2454f9b08274dbccbb096033c137ceceaebe737a83496d6376a12cb210db51916cdb101cda6988a92d8'
            'c8dd88dacf16226e9b60141bf448af7b5234b04811b4d5aaee2d6d48eb008442ced3e3f7a12b4cb709af5c471ddca320d1b7612fa724704ae330179f15104dd3'
            'f1f45708fb976f50fc707228fcfcadf6fbb8255b81d20b747c6427a905a524204768b0a51043ecfb795ebcc206c1e8b1947e4ef0236bae01fd89ba6ecdc4a242'
            'ec9ea91d79129b23aae6c4b9584fb396ecc572a0bafcac6229cc413ee441f610cb51ffce9383544c9fc62e747d5718be9be050850943eac4820095f190dc0ed0'
            '8eb535adc7aefd95c0ccfdd35525b4be764c4377ae5fc6002ad6ef6fd84b733c9054f8228083ce50eac1f970fdc1ef987ad1eb47813e7621b481ec3f490a9df7'
            '872c48f85350d2d815418afab340946f85ec1f9f3e1ab748fc1199df342df52642447736a5b783fb17eb324a961bbf8badc4e8401512e7182e4ff2e25b53d3a1'
            '76931a0d26c6a12e21dd0201f5ed8726ff0222f62cbcf4715d782b5b216d288fd4a7834188053a8df56a4c73af2db0b0b64fc2c0298ac0d383e8e42a0c6b85de')

prepare() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}"

  # Arch Linux branding: "Ubuntu Desktop" -> "Arch Linux Desktop"
  # (thanks to qiuwei!)
  patch -p1 -i "${srcdir}/0002_ArchLinux_Branding.patch"

  # Upstream support for the systray whitelist was removed
  patch -p1 -i "${srcdir}/0003_Revert_r3134_Remove_Systray_Whitelist.patch"

  # Do not treat warnings as errors
  patch -p1 -i "${srcdir}/0005_Disable_Werror.patch"

  # Remove launchers for Ubuntu's stupid Amazon crap, Ubuntu One (can be
  # manually re-added), Ubuntu's Software Center (not packaged in Arch Linux),
  # and Ubuntu's Ubiquity LiveCD installer
  patch -p1 -i "${srcdir}/0008_Remove_Launchers.patch"

  # Apply Ubuntu patches
  patch -p1 -i "${srcdir}/unity_${_actual_ver}${_extra_ver}-${_ubuntu_rel}.diff"
  for i in $(grep -v '#' debian/patches/series); do
    patch -p1 -i "debian/patches/${i}"
  done

  # Disable gtest if gtest-ubuntu is not installed
  if ! pacman -Q gtest-ubuntu &>/dev/null; then
    patch -p1 -i "${srcdir}/0001_Remove_gtest.patch"
  fi

  msg "Merging translations from ${_translations}"
  rm -f po/LINGUAS po/*.pot
  mv "${srcdir}"/po/*.pot po/
  for i in "${srcdir}"/po/*.po; do
    FILE=$(sed -n "s|.*/${pkgname}-||p" <<< ${i})
    mv ${i} po/${FILE}
    echo ${FILE%.*} >> po/LINGUAS
  done

  # Ubuntu Desktop -> Arch Linux Desktop
  sed -i '/msgid "Ubuntu Desktop"/ {n;s/Ubuntu/Arch Linux/}' po/*.po
  sed -i 's/Ubuntu Desktop/Arch Linux Desktop/g' po/*.po
}

build() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}"

  # (From debian/rules) http://ccache.samba.org/manual.html#_precompiled_headers
  export CCACHE_SLOPPINESS=time_macros

  [[ -d build ]] && rm -rvf build/
  mkdir build/ && cd build/

  cmake \
    -DCOMPIZ_BUILD_WITH_RPATH=FALSE \
    -DCOMPIZ_PACKAGING_ENABLED=TRUE \
    -DCOMPIZ_PLUGIN_INSTALL_TYPE=package \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DUSE_GSETTINGS=TRUE \
    -Duse_pch=OFF \
    ..

  make

  # Make sure that the GSettings schema files were created
  pushd generated/glib-2.0/schemas/
  if \
    [ ! -f org.compiz.networkarearegion.gschema.xml ] || \
    [ ! -f org.compiz.unitydialog.gschema.xml ] || \
    [ ! -f org.compiz.unitymtgrabhandles.gschema.xml ] ||
    [ ! -f org.compiz.unityshell.gschema.xml ]; then
    make compiz_gsettings_compile_local
  fi
  popd

  # Build autopilot tests
  pushd ../tests/autopilot/
  python2 setup.py build
  popd
}

check() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}/build"
  #make check-headless
}

package() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}/build"
  make DESTDIR="${pkgdir}/" install

  # Install autopilot and autopilot tests
  pushd ../tests/autopilot/
  python2 setup.py install --root "${pkgdir}" --skip-build --optimize=1
  popd

  # Install dconf path migration stuff
  install -dm755 "${pkgdir}/etc/xdg/autostart/"
  install -m644 "${srcdir}/unity-migrate-dconf-path.desktop" \
    "${pkgdir}/etc/xdg/autostart/"
  install -m755 ../tools/migration-scripts/01_unity_change_dconf_path \
    "${pkgdir}/usr/lib/unity/"

  # Install profile convert files
  install -dm755 "${pkgdir}/usr/lib/compiz/migration/"
  install -m644 ../tools/convert-files/* "${pkgdir}/usr/lib/compiz/migration/"

  # Taken from Ubuntu source package's debian/rules file
  find "${pkgdir}/usr/lib" -name \*.*a -exec rm {} \;
  rm -vf "${pkgdir}/usr/share/compiz/networkarearegion.xml"
  rm -vf "${pkgdir}/usr/lib/compiz/libnetworkarearegion.so"
  rm -vf "${pkgdir}/usr/share/compiz/unitydialog.xml"
  rm -vf "${pkgdir}/usr/lib/compiz/libunitydialog.so"

  # Fix Python 2 scripts
  sed -i 's|^\(#!.*python$\)|\12|g' \
    "${pkgdir}/usr/bin/unity" \
    "${pkgdir}/usr/lib/unity/makebootchart.py"

  # Arch Linux logo
  install -m644 "${srcdir}/launcher_bfb.png" \
    "${pkgdir}/usr/share/unity/icons/launcher_bfb.png"

  # Check for missing GSettings schemas
  pushd "${pkgdir}/usr/share/glib-2.0/schemas/"
  if \
    [ ! -f org.compiz.networkarearegion.gschema.xml ] || \
    [ ! -f org.compiz.unitydialog.gschema.xml ] || \
    [ ! -f org.compiz.unitymtgrabhandles.gschema.xml ] || \
    [ ! -f org.compiz.unityshell.gschema.xml ]; then
    error "GSettings schemas didn't get installed"'!'
    error "Please tar and upload the src/ directory and report a bug."
    exit 1
  fi
  popd

  # Change window dragging key back to Alt. Super conflicts with Unity's other
  # hotkeys.
  install -m644 "${srcdir}/10_unity.gschema.override" \
    "${pkgdir}/usr/share/glib-2.0/schemas/"

  # unity-panel-service is now started by an Upstart user job. I'm not quite
  # sure how to use systemd's user services to do the same thing yet.
  install -dm755 "${pkgdir}/usr/share/dbus-1/services/"
  install -m644 "${srcdir}/com.canonical.Unity.Panel.Service.service" \
    "${pkgdir}/usr/share/dbus-1/services/"
}

# vim:set ts=2 sw=2 et:
